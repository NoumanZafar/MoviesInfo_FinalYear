package com.company.movies_database.movies_database.movies_database.people.generated;

import com.company.movies_database.movies_database.movies_database.people.People;
import com.company.movies_database.movies_database.movies_database.people.PeopleImpl;
import com.company.movies_database.movies_database.movies_database.people.PeopleManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.movies_database.movies_database.movies_database.people.People}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPeopleManagerImpl 
extends AbstractManager<People> 
implements GeneratedPeopleManager {
    
    private final TableIdentifier<People> tableIdentifier;
    
    protected GeneratedPeopleManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("MOVIES_DATABASE", "MOVIES_DATABASE", "PEOPLE");
    }
    
    @Override
    public People create() {
        return new PeopleImpl();
    }
    
    @Override
    public TableIdentifier<People> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<People>> fields() {
        return PeopleManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<People>> primaryKeyFields() {
        return Stream.of(
            People.PERSON_ID
        );
    }
}