package com.company.movies_database.movies_database.movies_database.movie_people.generated;

import com.company.movies_database.movies_database.movies_database.movie_people.MoviePeople;
import com.company.movies_database.movies_database.movies_database.movies.Movies;
import com.company.movies_database.movies_database.movies_database.people.People;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movies_database.movies_database.movies_database.movie_people.MoviePeople}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMoviePeopleImpl implements MoviePeople {
    
    private int movieId;
    private int personId;
    
    protected GeneratedMoviePeopleImpl() {}
    
    @Override
    public int getMovieId() {
        return movieId;
    }
    
    @Override
    public int getPersonId() {
        return personId;
    }
    
    @Override
    public MoviePeople setMovieId(int movieId) {
        this.movieId = movieId;
        return this;
    }
    
    @Override
    public MoviePeople setPersonId(int personId) {
        this.personId = personId;
        return this;
    }
    
    @Override
    public Movies findMovieId(Manager<Movies> foreignManager) {
        return foreignManager.stream().filter(Movies.MOVIE_ID.equal(getMovieId())).findAny().orElse(null);
    }
    
    @Override
    public People findPersonId(Manager<People> foreignManager) {
        return foreignManager.stream().filter(People.PERSON_ID.equal(getPersonId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("movieId = "  + Objects.toString(getMovieId()));
        sj.add("personId = " + Objects.toString(getPersonId()));
        return "MoviePeopleImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof MoviePeople)) { return false; }
        final MoviePeople thatMoviePeople = (MoviePeople)that;
        if (this.getMovieId() != thatMoviePeople.getMovieId()) { return false; }
        if (this.getPersonId() != thatMoviePeople.getPersonId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getMovieId());
        hash = 31 * hash + Integer.hashCode(getPersonId());
        return hash;
    }
}