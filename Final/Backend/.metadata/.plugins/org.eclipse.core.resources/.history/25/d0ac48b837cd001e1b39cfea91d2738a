package ie.tus.athlone.MoviesInfo;

import java.util.List;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.company.movies_database.MoviesDatabaseApplication;
import com.company.movies_database.generated.GeneratedMoviesDatabaseApplicationBuilder;
import com.company.movies_database.movies_database.movies_database.movie_people.MoviePeople;
import com.company.movies_database.movies_database.movies_database.movie_people.MoviePeopleManager;
import com.company.movies_database.movies_database.movies_database.people.People;
import com.company.movies_database.movies_database.movies_database.people.PeopleManager;

@RestController
@RequestMapping("/people")
@CrossOrigin("*") // any port#
public class ActorsController {
	private final PeopleManager people;
	private final MoviePeopleManager moviePeople;
	MoviesDatabaseApplication app;
	
	public ActorsController() {
		people = app.getOrThrow(PeopleManager.class);
		moviePeople = app.getOrThrow(MoviePeopleManager.class);
	}

	/**
	 * 
	 * -- SEARCH THE ACORTS FOR A PARTUCULAR MOVIE 
	 * SELECT P.* FROM MOVIE_PEOPLE MP
	 * INNER JOIN PEOPLE P ON MP.PERSON_ID = P.PERSON_ID
	 * WHERE MP.MOVIE_ID = 101;
	 */
	@GetMapping("{id}")
	public List<People> getMoviePeople(@PathVariable int id) {

		List<People> peopleInMovie = moviePeople.stream()
				.filter(MoviePeople.MOVIE_ID.equal(id))
				.map(MoviePeople.PERSON_ID)
				.flatMap(null)
	}


}
