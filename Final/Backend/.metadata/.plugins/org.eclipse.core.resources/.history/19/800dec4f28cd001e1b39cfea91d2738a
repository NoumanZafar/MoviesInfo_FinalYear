package com.company.movies_database.movies_database.movies_database.users.generated;

import com.company.movies_database.movies_database.movies_database.users.Users;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movies_database.movies_database.movies_database.users.Users}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUsersImpl implements Users {
    
    private int userId;
    private String username;
    private String email;
    private String password;
    
    protected GeneratedUsersImpl() {}
    
    @Override
    public int getUserId() {
        return userId;
    }
    
    @Override
    public String getUsername() {
        return username;
    }
    
    @Override
    public String getEmail() {
        return email;
    }
    
    @Override
    public String getPassword() {
        return password;
    }
    
    @Override
    public Users setUserId(int userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public Users setUsername(String username) {
        this.username = username;
        return this;
    }
    
    @Override
    public Users setEmail(String email) {
        this.email = email;
        return this;
    }
    
    @Override
    public Users setPassword(String password) {
        this.password = password;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("userId = "   + Objects.toString(getUserId()));
        sj.add("username = " + Objects.toString(getUsername()));
        sj.add("email = "    + Objects.toString(getEmail()));
        sj.add("password = " + Objects.toString(getPassword()));
        return "UsersImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Users)) { return false; }
        final Users thatUsers = (Users)that;
        if (this.getUserId() != thatUsers.getUserId()) { return false; }
        if (!Objects.equals(this.getUsername(), thatUsers.getUsername())) { return false; }
        if (!Objects.equals(this.getEmail(), thatUsers.getEmail())) { return false; }
        if (!Objects.equals(this.getPassword(), thatUsers.getPassword())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUserId());
        hash = 31 * hash + Objects.hashCode(getUsername());
        hash = 31 * hash + Objects.hashCode(getEmail());
        hash = 31 * hash + Objects.hashCode(getPassword());
        return hash;
    }
}