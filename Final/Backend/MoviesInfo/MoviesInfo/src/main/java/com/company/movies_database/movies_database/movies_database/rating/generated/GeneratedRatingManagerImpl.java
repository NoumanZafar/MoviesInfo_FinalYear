package com.company.movies_database.movies_database.movies_database.rating.generated;

import com.company.movies_database.movies_database.movies_database.rating.Rating;
import com.company.movies_database.movies_database.movies_database.rating.RatingImpl;
import com.company.movies_database.movies_database.movies_database.rating.RatingManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.movies_database.movies_database.movies_database.rating.Rating}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRatingManagerImpl 
extends AbstractManager<Rating> 
implements GeneratedRatingManager {
    
    private final TableIdentifier<Rating> tableIdentifier;
    
    protected GeneratedRatingManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("MOVIES_DATABASE", "MOVIES_DATABASE", "RATING");
    }
    
    @Override
    public Rating create() {
        return new RatingImpl();
    }
    
    @Override
    public TableIdentifier<Rating> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Rating>> fields() {
        return RatingManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Rating>> primaryKeyFields() {
        return Stream.of(
            Rating.USER_ID,
            Rating.MOVIE_ID
        );
    }
}