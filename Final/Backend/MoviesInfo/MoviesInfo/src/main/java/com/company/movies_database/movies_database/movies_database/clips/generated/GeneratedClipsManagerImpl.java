package com.company.movies_database.movies_database.movies_database.clips.generated;

import com.company.movies_database.movies_database.movies_database.clips.Clips;
import com.company.movies_database.movies_database.movies_database.clips.ClipsImpl;
import com.company.movies_database.movies_database.movies_database.clips.ClipsManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.movies_database.movies_database.movies_database.clips.Clips}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClipsManagerImpl 
extends AbstractManager<Clips> 
implements GeneratedClipsManager {
    
    private final TableIdentifier<Clips> tableIdentifier;
    
    protected GeneratedClipsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("MOVIES_DATABASE", "movies_database", "clips");
    }
    
    @Override
    public Clips create() {
        return new ClipsImpl();
    }
    
    @Override
    public TableIdentifier<Clips> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Clips>> fields() {
        return ClipsManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Clips>> primaryKeyFields() {
        return Stream.of(
            Clips.CLIP_ID
        );
    }
}