package com.company.movies_database.movies_database.movies_database.reviews.generated;

import com.company.movies_database.movies_database.movies_database.reviews.Reviews;
import com.company.movies_database.movies_database.movies_database.reviews.ReviewsImpl;
import com.company.movies_database.movies_database.movies_database.reviews.ReviewsManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.movies_database.movies_database.movies_database.reviews.Reviews}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedReviewsManagerImpl 
extends AbstractManager<Reviews> 
implements GeneratedReviewsManager {
    
    private final TableIdentifier<Reviews> tableIdentifier;
    
    protected GeneratedReviewsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("MOVIES_DATABASE", "movies_database", "reviews");
    }
    
    @Override
    public Reviews create() {
        return new ReviewsImpl();
    }
    
    @Override
    public TableIdentifier<Reviews> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Reviews>> fields() {
        return ReviewsManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Reviews>> primaryKeyFields() {
        return Stream.of(
            Reviews.REVIEW_ID
        );
    }
}