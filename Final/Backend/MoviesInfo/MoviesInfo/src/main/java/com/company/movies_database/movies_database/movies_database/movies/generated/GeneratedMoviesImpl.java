package com.company.movies_database.movies_database.movies_database.movies.generated;

import com.company.movies_database.movies_database.movies_database.movies.Movies;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movies_database.movies_database.movies_database.movies.Movies}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMoviesImpl implements Movies {
    
    private int movieId;
    private String title;
    private String releaseDate;
    private String genre;
    private String posterUrl;
    private String mDescription;
    
    protected GeneratedMoviesImpl() {}
    
    @Override
    public int getMovieId() {
        return movieId;
    }
    
    @Override
    public String getTitle() {
        return title;
    }
    
    @Override
    public Optional<String> getReleaseDate() {
        return Optional.ofNullable(releaseDate);
    }
    
    @Override
    public Optional<String> getGenre() {
        return Optional.ofNullable(genre);
    }
    
    @Override
    public String getPosterUrl() {
        return posterUrl;
    }
    
    @Override
    public String getMDescription() {
        return mDescription;
    }
    
    @Override
    public Movies setMovieId(int movieId) {
        this.movieId = movieId;
        return this;
    }
    
    @Override
    public Movies setTitle(String title) {
        this.title = title;
        return this;
    }
    
    @Override
    public Movies setReleaseDate(String releaseDate) {
        this.releaseDate = releaseDate;
        return this;
    }
    
    @Override
    public Movies setGenre(String genre) {
        this.genre = genre;
        return this;
    }
    
    @Override
    public Movies setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
        return this;
    }
    
    @Override
    public Movies setMDescription(String mDescription) {
        this.mDescription = mDescription;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("movieId = "      + Objects.toString(getMovieId()));
        sj.add("title = "        + Objects.toString(getTitle()));
        sj.add("releaseDate = "  + Objects.toString(OptionalUtil.unwrap(getReleaseDate())));
        sj.add("genre = "        + Objects.toString(OptionalUtil.unwrap(getGenre())));
        sj.add("posterUrl = "    + Objects.toString(getPosterUrl()));
        sj.add("mDescription = " + Objects.toString(getMDescription()));
        return "MoviesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Movies)) { return false; }
        final Movies thatMovies = (Movies)that;
        if (this.getMovieId() != thatMovies.getMovieId()) { return false; }
        if (!Objects.equals(this.getTitle(), thatMovies.getTitle())) { return false; }
        if (!Objects.equals(this.getReleaseDate(), thatMovies.getReleaseDate())) { return false; }
        if (!Objects.equals(this.getGenre(), thatMovies.getGenre())) { return false; }
        if (!Objects.equals(this.getPosterUrl(), thatMovies.getPosterUrl())) { return false; }
        if (!Objects.equals(this.getMDescription(), thatMovies.getMDescription())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getMovieId());
        hash = 31 * hash + Objects.hashCode(getTitle());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getReleaseDate()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getGenre()));
        hash = 31 * hash + Objects.hashCode(getPosterUrl());
        hash = 31 * hash + Objects.hashCode(getMDescription());
        return hash;
    }
}